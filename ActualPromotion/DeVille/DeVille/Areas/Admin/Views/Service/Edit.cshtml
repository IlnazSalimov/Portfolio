@using Deville.Models.Showcases
@model EditService
@{
    ViewBag.Title = "Редактировать услугу";
    Layout = "~/Areas/Admin/Views/Layouts/AdminDefaultLayouts.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-10">
        @using (Html.BeginForm("Edit", "Service", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.Hidden(Html.NameFor(model => model.Id).ToString())
            <div class="form-group  @(IsPost && ViewData.ModelState[Html.NameFor(model => model.Name).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.Name, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Name) })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.Name)</span>
                </div>
            </div>

            <div class="form-group  @(IsPost && ViewData.ModelState[Html.NameFor(model => model.Description).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.Description, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Description) })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.Description)</span>
                </div>
            </div>
        
            <div class="form-group @(IsPost && ViewData.ModelState[Html.NameFor(model => model.CategoryId).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.CategoryId, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.CategoryId, ViewBag.ServiceCategories as SelectList, "-- Выберите категорию --", new { @class = "form-control" })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.CategoryId)</span>
                </div>
            </div>
            
            <div class="form-group @(IsPost && ViewData.ModelState[Html.NameFor(model => model.SubcategoryId).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.SubcategoryId, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    <select class="form-control" id="SubcategoryId" name="SubcategoryId">
                        <option value="">-- Выберите подыкатегорию --</option>
                    </select>
                    <span class="help-block">@Html.ValidationMessageFor(model => model.SubcategoryId)</span>
                </div>
            </div>
        
            <div class="form-group @(IsPost && ViewData.ModelState[Html.NameFor(model => model.VirtuosoPrice).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.VirtuosoPrice, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.VirtuosoPrice, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.VirtuosoPrice) })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.VirtuosoPrice)</span>
                </div>
            </div>
        
            <div class="form-group @(IsPost && ViewData.ModelState[Html.NameFor(model => model.ExpertPrice).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.ExpertPrice, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.ExpertPrice, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.ExpertPrice) })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.ExpertPrice)</span>
                </div>
            </div>
        
            <div class="form-group @(IsPost && ViewData.ModelState[Html.NameFor(model => model.HandymanPrice).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.HandymanPrice, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.HandymanPrice, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.HandymanPrice) })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.HandymanPrice)</span>
                </div>
            </div>
        
            <div class="form-group @(IsPost && ViewData.ModelState[Html.NameFor(model => model.Price).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.Price, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Price) })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.Price)</span>
                </div>
            </div>

            <div class="form-group @(IsPost && ViewData.ModelState[Html.NameFor(model => model.ImgCover).ToString()].Errors.Count > 0 ? "has-error" : String.Empty)">
                @Html.LabelFor(model => model.ImgCover, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.ImgCover, new { placeholder = Html.DisplayNameFor(model => model.ImgCover), type = "file" })
                    <span class="help-block">@Html.ValidationMessageFor(model => model.ImgCover)</span>
                </div>
            </div>
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-primary">Сохранить</button>
                @Html.ActionLink("Отмена", "Index", new { }, new { @class = "btn btn-default" })
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        $('#CategoryId').change(function () {
            var that = this;
            if ($(that).val() != '') {
                $('#SubcategoryId').attr('disabled', false);
                getSubcategoryByCategoryId($(that).val(), function (subcategories) {
                    $('#SubcategoryId option:gt(0)').remove();
                    for (var i = 0; i < subcategories.length; i++) {
                        $('#SubcategoryId')
                            .append($("<option></option>")
                            .attr("value", subcategories[i].Id)
                            .text(subcategories[i].Title));
                    }
                    var subcategoryId = '@Model.SubcategoryId';
                    $('#SubcategoryId').val(subcategoryId);
                });
            }
            else {
                $('#SubcategoryId').attr('disabled', true);
            }
        });
        $(document).ready(function () {
            $('#CategoryId').change();
        });
    </script>
}